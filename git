Branch
A branch is a pointer to a partcilar commit.
The default branch that git creates for you when a new repository is initialised is called master.
We can use git branch command to list, createc delete andanipulate branches.
Merging
The term that Git uses for combining branched data and hitory together.
We use git checkout to check out the latest snapshot for both the files and for branches.
Git uses two different algorithms to perform a merge: fast-forward and three-way merge

Merging
The term git uses for combining branched data and history together.
Git uses two  different algorithms to performa merge: fast-forward and three way merge.

Branch:A pointer to  a particular commit,  representing an independent line of development in a  project.
Commit ID: An identifier next to the word  commit in the log
Fast-Forward merge:A merge when all the commits in the checked out branch are also in  the branch that's  being merged
Head: This points  to  the top of the branch that is being used
Master: The default branch that Git creates for  when a new repository initialized, commonly used to placed approved pieces of a project
Merge Conflict: This occurs when the changes are made on the same part of the same  file, and Git won't know how to merge those changes.
Rollback: The act of reverting changes made to a software to a  previous state
Three-way merge: A merge when the  snapshots at the two branch tips with the most recent common ancestor, the  commit befoe  the divergence.

What is secure shell?

Secure shell is a robust protocol for connecting to servers remotely.In the realm  of remote server access, security is going to be more and more
important to  keep your information safe. Secure shell  is primarily used for logging in to Linux  Servers, Unix Servers and certain networking
equipment such routers.

ALternatives to SSH

SSH provides a shield against prying eyes, but how does it compare to alternatives?
Telnet is one popular alternative. Telnet exposes your type commands  including passwords, to anyone on the network  with right tools/
Although Transport Layer Security (TLS) encrypts data within browsers, SSH secures data in interactive terminal sessions or file transfers.
This encryption ensures that sensitive information remains confidential during communications.

Another alternative is virtual private networks (VPNs). VPNs also offer encryption but grant access to entire networks after connection. SSH adheres
to entire networks after connection. SSH adheres to the principle of least privilege, restricting users to specific hosts, enhancing security.
Another option might be remote-control software like VNC or GoToMyPC. They focus on graphical user interface and desktop experiences, which
may not align with most Linux servers that operate sans desktop environments.

Operation

SSH operates through two key componenets: the SSH server and the SSH client. The SSH server, residing on the target device, establishes secure network 
connections, undergoes mutual authentication, and intiates encrypted login sessions or file transfers.

Conversely, the SSH client establishes a connection to the SSH server, ensuring a secure interaction. The client makes requests, such as "log me in" or 
"copy this file."

SSH keys

In the SSH protocol, an access credential is known as an SSH key. It serves a similar purpose as usernames and passwords, although system administrators
and power users typically use the keys to automate procedures and achieve single sign-on.

Displaying the fingerprint of an SSH key is a useful way to verify that you're using the correct and that the remote server's key  hasn't been tampered
with. To display the finger print of an SSH key, you can use the SSH-keygen command-line tool.

Key takeaways


SSH prioritizes security in remote server access: Secure shell (SSH) is a robust and trusted protocol for securely connecting to servers remotely. It
finds widespread use in accessing Linux servers, Unix servers and specific networking equipmen, serving as a sheild against unauthorized access 
and breaches.

Comparing SSH with alternatives: When you compare SSH to alternatives like Telnet, its security superiority becomes  clear.
Telent exposes commands including passwords, to  potential  threats , whereas SSH's encryption guarantees confidentiality during interactions with the 
server and enables secure login or file copying.

Just like a password, the security of your SSH key is critical. Never share yout SSH private key with anyone or put SSH keys into your application code.
WIth someone having access to your information, they can gain unauthorized access by logging in and pretending to be you.

SSH Protocol
When discussing computer networks, the word "shell" refers to a program that provide an interface for accessing another operating system.\
With all the efforts put into keeping your machine secure , you certainly want security when its connected to another machine.
The secure shell network protocol, usually shorthanded to "SSH" , allows secure access to a computer over an unsecured network.

What is a protocol 
A protocol is a set of rules for how two things should communicate with each other. You may have heard the phrase "military protocol".  
which refers to the strict guidelines that govern communications between members of the armed forces in all situations. 
In the cae of computer protocols, these are usually published as an open standards so that any given protocol be implemented in various 
products. Having these protocols readily available to anyone can be implemented in various products. Having these protocols readily 
available to everyone means that any machine or network implements a given protocol should be able to communicate seamlessly with anything
else that supports the same protocol.

For a deeper dive into the secure shell.


The SSH protocol
So how does SSH secure the network?
It works on the principle of public-private key encryption. The client and the server each generate a strong encryption key  for any data 
that is passed between them. Then, that key   gets split in half with the client retaining  one portion and the server keeping the other.
It's a complex version of simple idea, really its not hard to imagine two people making up an encryption code and then tearing it half
for extra secrecy


In SSH, the keys are split between a public key, the public's half of the server's encryption key,  and the private key, which is stored
only on the server. This way, a user's machine can encrypt a message using the public key, but only the connnected server can decode it
because the server's private key will successfully decrypt the message. This waym if someone did intercept the network traffic, they still
could'nt read it because they don't have the server's private key. Using SSH, your keystrokes and the server's responses are completely 
secured.

Using the SSH protocol

The SSH protocol is commonly used for logging in to the servers remotely. While its primarily used for logging to linux and Uix servers, 
it is also used to encrypt file  transfers and to login to some  network equipment,  like routers.


Of course, your private key should never be transimtted to anyone else or shared anywhere. Most SSH clients will not connect if your
private ket is protected from other users. Because your private key is unique to you , it can serve as both authentication
and encryption, so the server don't need to ask you for password.

Besides providing a secure login shell on a remote server, SSH can be used for a  number of other functions including:

*Transfering files between client and server with SCP (Secure copy protocol) or SFTP (Secure File Transfer Protocol); for more
about these types of file transfers see the differences between SFTP and SCP.

*Forwarding network ports from server to client, or "tunneling".

*Relaying your login to yet another server behind  firewall, sometimes referred to as a "jump box" or "bastion host";for more on this
relaying method.

*Running graphical user interface (GUI) applications on a server but displaying them on a local client.




